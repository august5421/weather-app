{"version":3,"sources":["containers/images/winter.jpg","containers/images/spring.jpg","containers/images/summer.jpg","containers/images/fall.jpg","components/Weather.js","components/WeatherContainer.js","components/Forecast.js","components/WeatherForecast.js","components/BackgroundImage.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Weather","temprature","humidity","precip","windSpeed","city","condition","icon","className","src","alt","Math","round","moment","format","WeatherContainer","useState","lat","setLat","long","setLong","setTemprature","setHumidity","setPrecip","setWindSpeed","setCity","setCondition","setIcon","useEffect","fetchData","a","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","axios","get","then","data","console","log","current","temp_f","precip_in","wind_mph","location","name","text","Forecast","forecast","map","weather","unix","dt","description","temp","min","max","WeatherForecast","setForecast","daily","month","Date","getMonth","backgroundImages","winterBackground","springBackground","summerBackground","fallBackground","BackgroundImage","props","state","image_src","this","setState","style","height","backgroundImage","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84e952ac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/winter.7d455e99.jpg\";","export default __webpack_public_path__ + \"static/media/spring.f08f1d4e.jpg\";","export default __webpack_public_path__ + \"static/media/summer.c061a9cc.jpg\";","export default __webpack_public_path__ + \"static/media/fall.c4f8fe43.jpg\";","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Weather = ({temprature, humidity, precip, windSpeed, city, condition, icon}) => {\r\n     \r\n    return (\r\n    <div>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-7 m-0 align-bottom mb-2 mb-md-0 weather-portion\">\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col\">\r\n                        <table className=\"h-100 w-100\">\r\n                                <tr>\r\n                                    <td className=\"align-middle\">\r\n                                        <img src={icon} alt=\"Weather Icon\"/>\r\n                                    </td>\r\n                                    <td className=\"align-middle nowrap\">\r\n                                        <span className=\"display-3\">{Math.round(temprature)}&#176; F</span>\r\n                                    </td>\r\n                                </tr>\r\n                        </table>              \r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <table className=\"h-100\">\r\n                            <tbody>\r\n                                <td className=\"align-middle\">\r\n                                    Humidity: {humidity}%<br />\r\n                                    Wind Speed: {windSpeed} MPH<br />\r\n                                    Precipitation: {precip} IN<br />\r\n                                </td>\r\n                            </tbody>\r\n                        </table>                \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-5 m-0 order-first order-md-last mb-2 mb-md-0 weather-portion relBoi\">\r\n                <h2 className=\"text-md-end\">{city}</h2>\r\n                <p className=\"lead text-md-end\">{moment().format('dddd')}, {moment().format('h:mm a')}</p>\r\n                <p className=\"text-md-end\">{condition}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Weather;","import React, { Component, useEffect, useState } from \"react\";\r\nimport Weather from './Weather';\r\nimport axios from 'axios';\r\n\r\nfunction WeatherContainer() {\r\n    const [lat, setLat] = useState([]);\r\n    const [long, setLong] = useState([]);\r\n    const [data, setData] = useState([]);\r\n    const [temprature, setTemprature] = useState(null);\r\n    const [humidity, setHumidity] = useState(null);\r\n    const [precip, setPrecip] = useState(null);\r\n    const [windSpeed, setWindSpeed] = useState(null);\r\n    const [city, setCity] = useState(null);\r\n    const [condition, setCondition] = useState(null);\r\n    const [icon, setIcon] = useState(null);\r\n\r\n    useEffect(() => { \r\n        const fetchData = async () => {\r\n          navigator.geolocation.getCurrentPosition(function(position) {\r\n            setLat(position.coords.latitude);\r\n            setLong(position.coords.longitude);\r\n          });\r\n          axios.get(`http://api.weatherapi.com/v1/current.json?key=234235b845d047f0b96212620211811&q=${lat},${long}`)\r\n          .then(data => {\r\n            console.log(data.data);\r\n            setTemprature(data.data.current.temp_f);\r\n            setHumidity(data.data.current.humidity);\r\n            setPrecip(data.data.current.precip_in);\r\n            setWindSpeed(data.data.current.wind_mph);\r\n            setCity(data.data.location.name);\r\n            setCondition(data.data.current.condition.text);\r\n            setIcon(data.data.current.condition.icon);\r\n          })\r\n        }\r\n        fetchData();\r\n    }, [lat,long])\r\n    return (\r\n    <div>\r\n        <Weather \r\n            temprature={temprature}\r\n            humidity={humidity}\r\n            precip={precip}\r\n            windSpeed={windSpeed}\r\n            city={city}\r\n            condition={condition}\r\n            icon={icon}\r\n        />\r\n    </div>\r\n    \r\n    \r\n  );\r\n}\r\n\r\n\r\nexport default WeatherContainer;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nexport default function Forecast( {forecast}) {\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col mt-0 mt-md-2\">\r\n                    <div className=\"row\">\r\n                       {forecast.map((data) => {\r\n                            return (\r\n                                <div className=\"col-sm mb-2 m-md-1 nowrap weather-portion relBoi\">\r\n                                    <img className=\"float-it-right d-sm-none\" src={\"https://openweathermap.org/img/wn/\"+ data.weather[0].icon +\"@2x.png\"} alt=\"Weather Icon\"/><br />\r\n                                    <img className=\"d-none d-sm-block\" src={\"https://openweathermap.org/img/wn/\"+ data.weather[0].icon +\"@2x.png\"} alt=\"Weather Icon\"/><br />\r\n                                    <span className=\"lead fw-bolder\">{moment.unix(data.dt).format('LL')}</span><br />\r\n                                    <span className=\"text-capitalize fw-bolder\">{data.weather[0].description}</span><br />\r\n                                    <span>Average Temp: {Math.round(data.temp.min + data.temp.max /2)}&#176; F</span><br />    \r\n                                    <span className=\"text-muted\">Humidity: {data.humidity}%</span><br />\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component, useEffect, useState } from \"react\";\r\nimport Forecast from './Forecast';\r\nimport axios from 'axios';\r\n\r\nfunction WeatherForecast() {\r\n    const [lat, setLat] = useState([]);\r\n    const [long, setLong] = useState([]);\r\n    const [data, setData] = useState([]);\r\n    const [forecast, setForecast] = useState([]);\r\n\r\n    useEffect(() => { \r\n        const fetchData = async () => {\r\n          navigator.geolocation.getCurrentPosition(function(position) {\r\n            setLat(position.coords.latitude);\r\n            setLong(position.coords.longitude);\r\n          });\r\n          axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${long}&units=imperial&appid=a872ab5fd9c7b5bd50632c167416b321`)\r\n          .then(data => {\r\n            console.log(data.data);  \r\n            setForecast(data.data.daily)\r\n\r\n          })\r\n        }\r\n        fetchData();\r\n    }, [lat,long])\r\n    return (\r\n    <div>\r\n        <Forecast \r\n            forecast={forecast}\r\n        />\r\n    </div>\r\n    \r\n    \r\n  );\r\n}\r\n\r\n\r\n\r\nexport default WeatherForecast;","import React, { Component } from 'react';\r\nimport winterBackground from 'C:/Users/Krispy Lad/Stuff/Programming/Courses/React/weather-app/src/containers/images/winter.jpg';\r\nimport springBackground from 'C:/Users/Krispy Lad/Stuff/Programming/Courses/React/weather-app/src/containers/images/spring.jpg';\r\nimport summerBackground from 'C:/Users/Krispy Lad/Stuff/Programming/Courses/React/weather-app/src/containers/images/summer.jpg';\r\nimport fallBackground from 'C:/Users/Krispy Lad/Stuff/Programming/Courses/React/weather-app/src/containers/images/fall.jpg';\r\nimport WeatherContainer from './WeatherContainer';\r\nimport WeatherForecast from './WeatherForecast';\r\nconst date = new Date();\r\nconst month = date.getMonth();\r\n  \r\nconst backgroundImages = [\r\n  winterBackground,\r\n  winterBackground,\r\n  springBackground,\r\n  springBackground,\r\n  springBackground,\r\n  summerBackground,\r\n  summerBackground,\r\n  summerBackground,\r\n  fallBackground,\r\n  fallBackground,\r\n  fallBackground ,\r\n  winterBackground,\r\n]\r\n\r\nclass BackgroundImage extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      image_src: ''\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    this.setState({image_src:backgroundImages[month] })\r\n  }\r\n  render() {\r\n    return (\r\n       <div className=\"theBackgroundImage\" style={{height: `100vh`, backgroundImage: `url(${this.state.image_src})` }}>\r\n           <div className=\"wrapper\">\r\n               <div className=\"h-100 d-flex\">\r\n                   <div className=\"centerSixty my-auto\">\r\n                        <WeatherContainer></WeatherContainer>\r\n                        <WeatherForecast></WeatherForecast>\r\n                   </div>\r\n                </div>\r\n           </div>     \r\n       </div>  \r\n    );\r\n  }\r\n}\r\n\r\nexport default BackgroundImage;","import React from \"react\";\nimport BackgroundImage from '../components/BackgroundImage';\nimport './App.css';\nimport '../index.css'; \n\n\nfunction App() {\n    return (\n        \n        <BackgroundImage></BackgroundImage>\n        \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}